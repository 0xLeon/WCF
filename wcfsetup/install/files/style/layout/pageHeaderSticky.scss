.pageHeader > div {
	/* huge performance increase when scrolling */
	will-change: transform;
}

@include screen-lg {
	.pageHeaderContainer.stickyPageHeader {
		z-index: 300;
	}
	
	.pageHeader.sticky {
		> div {
			background-color: $wcfHeaderMenuBackground;
			box-shadow: 0 0 10px rgba(0, 0, 0, .6);
			left: 0;
			position: fixed;
			top: 0;
			right: 0;
			z-index: 301;
		}
		
		
		.layoutBoundary {
			flex-wrap: nowrap;
			min-height: 50px;
			
			// remove padding, the vertical alignment is done using `align-items`
			padding-bottom: 0;
			padding-top: 0;
		}
		
		.pageHeaderContainerLeft,
		.pageHeaderContainerRight {
			align-items: center;
			flex-direction: row;
			justify-content: flex-start;
		}
		
		.pageHeaderContainerRight {
			min-width: 200px;
			position: relative;
		}
		
		.pageHeaderLogo {
			display: none;
			flex: 0 0 auto;
			margin-bottom: 0;
			order: 1;
			
			> a > .pageHeaderLogoLarge {
				display: none;
			}
			
			> a > .pageHeaderLogoSmall {
				display: block;
			}
		}
		
		.mainMenu {
			flex: 1 1 auto;
			margin-right: 20px;
			order: 2;
			
			.boxMenu {
				> li > a {
					align-items: center;
					display: flex;
					
					> span {
						flex: 0 0 auto;
					}
					
					> .boxMenuLinkOutstandingItems {
						margin-left: 5px;
					}
				}
			}
		}
		
		.userPanel {
			flex: 0 0 auto;
			order: 4;
		}
		
		.pageHeaderSearch {
			flex: 0 0 62px;
			margin-bottom: 0;
			margin-left: 10px;
			order: 3;
			
			.pageHeaderSearchLabel {
				background: $wcfHeaderMenuLinkBackground;
				color: $wcfHeaderMenuLink;
				cursor: pointer;
				display: block;
				height: 50px;
				position: relative;
				width: 62px;
				
				&:hover {
					background: $wcfHeaderMenuLinkBackgroundActive;
					color: $wcfHeaderMenuLinkActive;
				}
				
				&::before {
					color: inherit;
					content: $fa-var-search;
					display: block;
					font-family: FontAwesome;
					font-size: 28px;
					line-height: 32px;
					position: absolute;
					right: 18px;
					top: 50%;
					transform: translateY(-50%);
				}
			}
		}
		
		&:not(.searchBarOpen) .pageHeaderSearchInputContainer {
			display: none;
		}
		
		&.searchBarOpen .pageHeaderSearchInputContainer {
			position: absolute;
			
			// Regular top calculation does not work because one of the parents
			// is set to `position: fixed`, screwing up the entire calculation.
			// We can work around this by using a relative top value of 100%
			// which equals the total height of the parent container.
			top: 100% !important;
		}
		
		
	}
}

// force sticky header on mobile, there is no difference when scrolled
// all the way up and it might flicker when scrolling due to the inconsistent
// scroll event being fired
@include screen-md-down {
	.pageHeaderContainer {
		z-index: 300;
		
		// touch browser allow to scroll past the page top before they bounce back,
		// but in that case the original background color is visible
		background-color: transparent;
	}
	
	.pageHeader {
		flex-wrap: nowrap;
		
		> div {
			background-color: $wcfHeaderBackground;
			box-shadow: 0 0 10px rgba(0, 0, 0, .6);
			left: 0;
			max-width: 100vw;
			position: fixed;
			top: 0;
			right: 0;
			z-index: 301;
		}
	}
	
	.boxesHero {
		background-color: $wcfHeaderBackground;
	}
}

@include screen-xs {
	.pageHeader > div {
		transition: transform .12s ease-in-out;
	}
	
	.redactorActive .pageHeader > div {
		transform: translateY(-120%);
	}
}

@include screen-md-down {
	.pageHeaderSearch.open {
		left: 0;
		position: absolute;
		right: 0;
		
		.pageHeaderSearchInputContainer {
			border-radius: 0;
			display: flex;
			flex-wrap: wrap;
			
			.pageHeaderSearchType {
				flex: 0 0 100%;
				margin-bottom: 3px;
				
				> .button {
					border-radius: 0;
					max-width: unset;
					min-width: unset;
					width: 100%;
					
					// input field is larger on iOS
					align-items: center;
					display: flex;
				}
			}
			
			.pageHeaderSearchInput {
				flex: 1 1 auto;
			}
			
			.pageHeaderSearchInputButton {
				border-radius: 0;
			}
		}
	}
}
